// eslint.config.js (ESLint Flat Config for React/TypeScript/Vite)
// Generated by AI

import globals from "globals";
import pluginJs from "@eslint/js";
import tseslint from "typescript-eslint";
import pluginReact from "eslint-plugin-react";
import pluginReactHooks from "eslint-plugin-react-hooks";
import pluginReactRefresh from "eslint-plugin-react-refresh";
import pluginPrettier from "eslint-plugin-prettier"; // Correct way to import the Prettier plugin
import configPrettier from "eslint-config-prettier/flat"; // Correct way to import eslint-config-prettier for Flat Config

export default [
  {
    // Global ignores for the entire project
    ignores: [
      "dist/",        // Vite build output
      "node_modules/",// Standard Node.js modules
      "vite-env.d.ts",// Vite generated TypeScript declaration file
      "postcss.config.cjs" // Ignore the PostCSS config file (as it's CommonJS now)
    ],
  },
  // Base JS recommended rules
  pluginJs.configs.recommended,

  // Base TS recommended rules
  ...tseslint.configs.recommended,

  // React and React Hooks rules
  {
    files: ["**/*.{js,jsx,ts,tsx}"], // Apply this config to JS/JSX/TS/TSX files
    languageOptions: {
      parser: tseslint.parser, // Use TypeScript parser
      parserOptions: {
        ecmaVersion: "latest",
        sourceType: "module",
        // project: './tsconfig.json', // Enable this for type-aware linting if needed later
        jsxPragma: "React", // For React 17+ JSX transform
        jsx: true,
      },
      globals: {
        ...globals.browser, // Enable browser global variables (window, document, etc.)
      },
    },
    plugins: {
      "@typescript-eslint": tseslint.plugin,
      "react": pluginReact,
      "react-hooks": pluginReactHooks,
      "react-refresh": pluginReactRefresh,
      "prettier": pluginPrettier, // Explicitly provide the prettier plugin object here
    },
    settings: {
      react: {
        version: "detect", // Automatically detect the React version
      },
      // For eslint-plugin-import to resolve TypeScript paths correctly
      "import/resolver": {
        "node": {
          "extensions": [".js", ".jsx", ".ts", ".tsx"]
        },
        "typescript": {
          "alwaysTryTypes": true // Always try to resolve types
        }
      }
    },
    rules: {
      // Rules from 'eslint-plugin-react' recommended configuration
      ...pluginReact.configs.recommended.rules,
      // Rules from 'eslint-plugin-react-hooks' recommended-latest configuration
      ...pluginReactHooks.configs["recommended-latest"].rules,

      // Prettier rules via plugin: Ensure Prettier format mismatches are errors
      "prettier/prettier": "error",

      // React Refresh rules for Vite (essential for HMR)
      "react-refresh/only-export-components": [
        "warn",
        { allowConstantExport: true },
      ],

      // Custom rules or overrides for your project
      "no-console": "warn", // Allow console.log, but warn
      "import/prefer-default-export": "off", // Often useful to turn off for utils
      "@typescript-eslint/no-explicit-any": "off", // Temporarily allow 'any' if needed
      "no-undef": "off", // To avoid conflicts with Vite/TS compilation in some cases
      "react/react-in-jsx-scope": "off", // Not needed for React 17+ and new JSX transform
      "import/extensions": "off", // Conflicts with TS/Vite module resolution
      "import/no-unresolved": "off", // Conflicts with TS/Vite module resolution
    },
  },
  // eslint-config-prettier: Must come last to disable conflicting rules from other configs
  configPrettier,
];
